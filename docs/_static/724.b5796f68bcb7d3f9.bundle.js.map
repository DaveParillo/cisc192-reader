{"version":3,"file":"724.b5796f68bcb7d3f9.bundle.js","mappings":"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","sources":["webpack://WebComponents/./runestone/fitb/js/fitb-i18n.en.js","webpack://WebComponents/./runestone/fitb/js/fitb-i18n.pt-br.js","webpack://WebComponents/./runestone/fitb/js/fitb.js","webpack://WebComponents/./runestone/fitb/js/timedfitb.js","webpack://WebComponents/./runestone/shortanswer/js/shortanswer.js","webpack://WebComponents/./runestone/shortanswer/js/timed_shortanswer.js","webpack://WebComponents/./runestone/timed/js/timed.js"],"sourcesContent":["$.i18n().load({\n    en: {\n        msg_no_answer: \"No answer provided.\",\n        msg_fitb_check_me: \"Check me\",\n        msg_fitb_compare_me: \"Compare me\",\n    },\n});\n","$.i18n().load({\n    \"pt-br\": {\n        msg_no_answer: \"Nenhuma resposta dada.\",\n        msg_fitb_check_me: \"Verificar\",\n        msg_fitb_compare_me: \"Comparar\"\n    },\n});\n","// *********\n// |docname|\n// *********\n// This file contains the JS for the Runestone fillintheblank component. It was created By Isaiah Mayerchak and Kirby Olson, 6/4/15 then revised by Brad Miller, 2/7/20.\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./fitb-i18n.en.js\";\nimport \"./fitb-i18n.pt-br.js\";\nimport \"../css/fitb.css\";\n\nexport var FITBList = {}; // Object containing all instances of FITB that aren't a child of a timed assessment.\n\n// FITB constructor\nexport default class FITB extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig; // entire <p> element\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.origElem = orig;\n        this.divid = orig.id;\n        this.correct = null;\n        // See comments in fitb.py for the format of ``feedbackArray`` (which is identical in both files).\n        //\n        // Find the script tag containing JSON and parse it. See `SO <https://stackoverflow.com/questions/9320427/best-practice-for-embedding-arbitrary-json-in-the-dom>`_. If this parses to ``false``, then no feedback is available; server-side grading will be performed.\n        this.feedbackArray = JSON.parse(\n            this.scriptSelector(this.origElem).html()\n        );\n        this.createFITBElement();\n        this.caption = \"Fill in the Blank\";\n        this.addCaption(\"runestone\");\n        this.checkServer(\"fillb\", true);\n    }\n    // Find the script tag containing JSON in a given root DOM node.\n    scriptSelector(root_node) {\n        return $(root_node).find(`script[type=\"application/json\"]`);\n    }\n    /*===========================================\n    ====   Functions generating final HTML   ====\n    ===========================================*/\n    createFITBElement() {\n        this.renderFITBInput();\n        this.renderFITBButtons();\n        this.renderFITBFeedbackDiv();\n        // replaces the intermediate HTML for this component with the rendered HTML of this component\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n    renderFITBInput() {\n        // The text [input] elements are created by the template.\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        // Copy the original elements to the container holding what the user will see.\n        $(this.origElem).children().clone().appendTo(this.containerDiv);\n        // Remove the script tag.\n        this.scriptSelector(this.containerDiv).remove();\n        // Set the class for the text inputs, then store references to them.\n        let ba = $(this.containerDiv).find(\":input\");\n        ba.attr(\"class\", \"form form-control selectwidthauto\");\n        ba.attr(\"aria-label\", \"input area\");\n        this.blankArray = ba.toArray();\n        // When a blank is changed mark this component as interacted with.\n        // And set a class on the component in case we want to render components that have been used\n        // differently\n        for (let blank of this.blankArray) {\n            $(blank).change(this.recordAnswered.bind(this));\n        }\n    }\n\n    recordAnswered() {\n        this.isAnswered = true;\n        //let rcontainer = this.containerDiv.closest(\".runestone\");\n        //rcontainer.addClass(\"answered\");\n    }\n\n    renderFITBButtons() {\n        // \"submit\" button and \"compare me\" button\n        this.submitButton = document.createElement(\"button\");\n        this.submitButton.textContent = $.i18n(\"msg_fitb_check_me\");\n        $(this.submitButton).attr({\n            class: \"btn btn-success\",\n            name: \"do answer\",\n            type: \"button\",\n        });\n        this.submitButton.addEventListener(\n            \"click\",\n            function () {\n                this.checkCurrentAnswer();\n                this.logCurrentAnswer();\n            }.bind(this),\n            false\n        );\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.submitButton);\n        if (this.useRunestoneServices) {\n            this.compareButton = document.createElement(\"button\");\n            $(this.compareButton).attr({\n                class: \"btn btn-default\",\n                id: this.origElem.id + \"_bcomp\",\n                disabled: \"\",\n                name: \"compare\",\n            });\n            this.compareButton.textContent = $.i18n(\"msg_fitb_compare_me\");\n            this.compareButton.addEventListener(\n                \"click\",\n                function () {\n                    this.compareFITBAnswers();\n                }.bind(this),\n                false\n            );\n            this.containerDiv.appendChild(this.compareButton);\n        }\n        this.containerDiv.appendChild(document.createElement(\"div\"));\n    }\n    renderFITBFeedbackDiv() {\n        this.feedBackDiv = document.createElement(\"div\");\n        this.feedBackDiv.id = this.divid + \"_feedback\";\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.feedBackDiv);\n    }\n    /*===================================\n    === Checking/loading from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        var arr;\n        // Restore answers from storage retrieval done in RunestoneBase.\n        try {\n            // The newer format encodes data as a JSON object.\n            arr = JSON.parse(data.answer);\n            // The result should be an array. If not, try comma parsing instead.\n            if (!Array.isArray(arr)) {\n                throw new Error();\n            }\n        } catch (err) {\n            // The old format didn't.\n            arr = data.answer.split(\",\");\n        }\n        for (var i = 0; i < this.blankArray.length; i++) {\n            $(this.blankArray[i]).attr(\"value\", arr[i]);\n        }\n        // Use the feedback from the server, or recompute it locally.\n        if (!this.feedbackArray) {\n            this.displayFeed = data.displayFeed;\n            this.correct = data.correct;\n            this.isCorrectArray = data.isCorrectArray;\n            // Only render if all the data is present; local storage might have old data missing some of these items.\n            if (\n                typeof this.displayFeed !== \"undefined\" &&\n                typeof this.correct !== \"undefined\" &&\n                typeof this.isCorrectArray !== \"undefined\"\n            ) {\n                this.renderFeedback();\n            }\n        } else {\n            this.checkCurrentAnswer();\n        }\n    }\n    checkLocalStorage() {\n        // Loads previous answers from local storage if they exist\n        var storedData;\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    storedData = JSON.parse(ex);\n                    var arr = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                this.restoreAnswers(storedData);\n            }\n        }\n    }\n    setLocalStorage(data) {\n        let key = this.localStorageKey();\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    checkCurrentAnswer() {\n        // Start of the evaluation chain\n        this.isCorrectArray = [];\n        this.displayFeed = [];\n        this.given_arr = [];\n        for (var i = 0; i < this.blankArray.length; i++)\n            this.given_arr.push(this.blankArray[i].value);\n        if (this.useRunestoneServices) {\n            if (eBookConfig.enableCompareMe) {\n                this.enableCompareButton();\n            }\n        }\n        // Grade locally if we can't ask the server to grade.\n        if (this.feedbackArray) {\n            this.evaluateAnswers();\n            if (!this.isTimed) {\n                this.renderFeedback();\n            }\n        }\n    }\n\n    async logCurrentAnswer(sid) {\n        let answer = JSON.stringify(this.given_arr);\n        // Save the answer locally.\n        let feedback = true;\n        this.setLocalStorage({\n            answer: answer,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"fillb\",\n            act: answer || \"\",\n            answer: answer || \"\",\n            correct: this.correct ? \"T\" : \"F\",\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n            feedback = false;\n        }\n        // Per `logBookEvent <logBookEvent>`, the result is undefined if there's no server. Otherwise, the server provides the endpoint-specific results in ``data.details``; see `make_json_response`.\n        data = await this.logBookEvent(data);\n        let detail = data && data.detail;\n        if (!feedback) return;\n        if (!this.feedbackArray) {\n            // On success, update the feedback from the server's grade.\n            this.setLocalStorage({\n                answer: answer,\n                timestamp: detail.timestamp,\n            });\n            this.correct = detail.correct;\n            this.displayFeed = detail.displayFeed;\n            this.isCorrectArray = detail.isCorrectArray;\n            if (!this.isTimed) {\n                this.renderFeedback();\n            }\n        }\n        return detail;\n    }\n\n    /*==============================\n    === Evaluation of answer and ===\n    ===     display feedback     ===\n    ==============================*/\n    // Inputs:\n    //\n    // - Strings entered by the student in ``this.blankArray[i].value``.\n    // - Feedback in ``this.feedbackArray``.\n    //\n    // Outputs:\n    //\n    // - ``this.displayFeed`` is an array of HTML feedback.\n    // - ``this.isCorrectArray`` is an array of true, false, or null (the question wasn't answered).\n    // - ``this.correct`` is true, false, or null (the question wasn't answered).\n    evaluateAnswers() {\n        // Keep track if all answers are correct or not.\n        this.correct = true;\n        for (var i = 0; i < this.blankArray.length; i++) {\n            var given = this.blankArray[i].value;\n            // If this blank is empty, provide no feedback for it.\n            if (given === \"\") {\n                this.isCorrectArray.push(null);\n                this.displayFeed.push($.i18n(\"msg_no_answer\"));\n                this.correct = false;\n            } else {\n                // Look through all feedback for this blank. The last element in the array always matches. If no feedback for this blank exists, use an empty list.\n                var fbl = this.feedbackArray[i] || [];\n                for (var j = 0; j < fbl.length; j++) {\n                    // The last item of feedback always matches.\n                    if (j === fbl.length - 1) {\n                        this.displayFeed.push(fbl[j][\"feedback\"]);\n                        break;\n                    }\n                    // If this is a regexp...\n                    if (\"regex\" in fbl[j]) {\n                        var patt = RegExp(\n                            fbl[j][\"regex\"],\n                            fbl[j][\"regexFlags\"]\n                        );\n                        if (patt.test(given)) {\n                            this.displayFeed.push(fbl[j][\"feedback\"]);\n                            break;\n                        }\n                    } else {\n                        // This is a number.\n                        console.assert(\"number\" in fbl[j]);\n                        var [min, max] = fbl[j][\"number\"];\n                        // Convert the given string to a number. While there are `lots of ways <https://coderwall.com/p/5tlhmw/converting-strings-to-number-in-javascript-pitfalls>`_ to do this; this version supports other bases (hex/binary/octal) as well as floats.\n                        var actual = +given;\n                        if (actual >= min && actual <= max) {\n                            this.displayFeed.push(fbl[j][\"feedback\"]);\n                            break;\n                        }\n                    }\n                }\n                // The answer is correct if it matched the first element in the array. A special case: if only one answer is provided, count it wrong; this is a misformed problem.\n                let is_correct = j === 0 && fbl.length > 1;\n                this.isCorrectArray.push(is_correct);\n                if (!is_correct) {\n                    this.correct = false;\n                }\n            }\n        }\n        this.percent =\n            this.isCorrectArray.filter(Boolean).length / this.blankArray.length;\n    }\n\n    renderFeedback() {\n        if (this.correct) {\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n            for (let j = 0; j < this.blankArray.length; j++) {\n                $(this.blankArray[j]).removeClass(\"input-validation-error\");\n            }\n        } else {\n            if (this.displayFeed === null) {\n                this.displayFeed = \"\";\n            }\n            for (let j = 0; j < this.blankArray.length; j++) {\n                if (this.isCorrectArray[j] !== true) {\n                    $(this.blankArray[j]).addClass(\"input-validation-error\");\n                } else {\n                    $(this.blankArray[j]).removeClass(\"input-validation-error\");\n                }\n            }\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n        var feedback_html = \"<ul>\";\n        for (var i = 0; i < this.displayFeed.length; i++) {\n            feedback_html += \"<li>\" + this.displayFeed[i] + \"</li>\";\n        }\n        feedback_html += \"</ul>\";\n        // Remove the list if it's just one element.\n        if (this.displayFeed.length == 1) {\n            feedback_html = feedback_html.slice(\n                \"<ul><li>\".length,\n                -\"</li></ul>\".length\n            );\n        }\n        this.feedBackDiv.innerHTML = feedback_html;\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(document.body);\n        }\n    }\n\n    /*==================================\n    === Functions for compare button ===\n    ==================================*/\n    enableCompareButton() {\n        this.compareButton.disabled = false;\n    }\n    // _`compareFITBAnswers`\n    compareFITBAnswers() {\n        var data = {};\n        data.div_id = this.divid;\n        data.course = eBookConfig.course;\n        jQuery.get(\n            `${eBookConfig.new_server_prefix}/assessment/gettop10Answers`,\n            data,\n            this.compareFITB\n        );\n    }\n    compareFITB(data, status, whatever) {\n        var answers = data.detail.res;\n        var misc = data.detail.miscdata;\n        var body = \"<table>\";\n        body += \"<tr><th>Answer</th><th>Count</th></tr>\";\n        for (var row in answers) {\n            body +=\n                \"<tr><td>\" +\n                answers[row].answer +\n                \"</td><td>\" +\n                answers[row].count +\n                \" times</td></tr>\";\n        }\n        body += \"</table>\";\n        var html =\n            \"<div class='modal fade'>\" +\n            \"    <div class='modal-dialog compare-modal'>\" +\n            \"        <div class='modal-content'>\" +\n            \"            <div class='modal-header'>\" +\n            \"                <button type='button' class='close' data-dismiss='modal' aria-hidden='true'>&times;</button>\" +\n            \"                <h4 class='modal-title'>Top Answers</h4>\" +\n            \"            </div>\" +\n            \"            <div class='modal-body'>\" +\n            body +\n            \"            </div>\" +\n            \"        </div>\" +\n            \"    </div>\" +\n            \"</div>\";\n        var el = $(html);\n        el.modal();\n    }\n\n    disableInteraction() {\n        for (var i = 0; i < this.blankArray.length; i++) {\n            this.blankArray[i].disabled = true;\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).bind(\"runestone:login-complete\", function () {\n    $(\"[data-component=fillintheblank]\").each(function (index) {\n        var opts = {\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        };\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                FITBList[this.id] = new FITB(opts);\n            } catch (err) {\n                console.log(\n                    `Error rendering Fill in the Blank Problem ${this.id}\n                     Details: ${err}`\n                );\n            }\n        }\n    });\n});\n","import FITB from \"./fitb.js\";\nexport default class TimedFITB extends FITB {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.inputDiv);\n        this.hideButtons();\n        this.needsReinitialization = true;\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n        $(this.compareButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        // Returns if the question was correct, incorrect, or skipped (return null in the last case)\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    hideFeedback() {\n        for (var i = 0; i < this.blankArray.length; i++) {\n            $(this.blankArray[i]).removeClass(\"input-validation-error\");\n        }\n        this.feedBackDiv.style.display = \"none\";\n    }\n\n    reinitializeListeners() {\n        for (let blank of this.blankArray) {\n            $(blank).change(this.recordAnswered.bind(this));\n        }\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory.fillintheblank = function (opts) {\n    if (opts.timed) {\n        return new TimedFITB(opts);\n    }\n    return new FITB(opts);\n};\n","/*==========================================\n=======    Master shortanswer.js    ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone shortanswer component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/2/15                ===\n===              Brad Miller             ===\n===                2019                  ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./../css/shortanswer.css\";\n\nexport var saList;\nif (saList === undefined) saList = {}; // Dictionary that contains all instances of shortanswer objects\n\nexport default class ShortAnswer extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        if (opts) {\n            var orig = opts.orig; // entire <p> element that will be replaced by new HTML\n            this.useRunestoneServices =\n                opts.useRunestoneServices || eBookConfig.useRunestoneServices;\n            this.origElem = orig;\n            this.divid = orig.id;\n            this.question = this.origElem.innerHTML;\n            this.optional = false;\n            if ($(this.origElem).is(\"[data-optional]\")) {\n                this.optional = true;\n            }\n            if ($(this.origElem).is(\"[data-mathjax]\")) {\n                this.mathjax = true;\n            }\n            this.renderHTML();\n            this.caption = \"shortanswer\";\n            this.addCaption(\"runestone\");\n            this.checkServer(\"shortanswer\", true);\n        }\n    }\n\n    renderHTML() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.newForm = document.createElement(\"form\");\n        this.newForm.id = this.divid + \"_journal\";\n        this.newForm.name = this.newForm.id;\n        this.newForm.action = \"\";\n        this.containerDiv.appendChild(this.newForm);\n        this.fieldSet = document.createElement(\"fieldset\");\n        this.newForm.appendChild(this.fieldSet);\n        this.legend = document.createElement(\"legend\");\n        this.legend.innerHTML = \"Short Answer\";\n        this.fieldSet.appendChild(this.legend);\n        this.firstLegendDiv = document.createElement(\"div\");\n        this.firstLegendDiv.innerHTML = this.question;\n        $(this.firstLegendDiv).addClass(\"journal-question\");\n        this.fieldSet.appendChild(this.firstLegendDiv);\n        this.jInputDiv = document.createElement(\"div\");\n        this.jInputDiv.id = this.divid + \"_journal_input\";\n        this.fieldSet.appendChild(this.jInputDiv);\n        this.jOptionsDiv = document.createElement(\"div\");\n        $(this.jOptionsDiv).addClass(\"journal-options\");\n        this.jInputDiv.appendChild(this.jOptionsDiv);\n        this.jLabel = document.createElement(\"label\");\n        $(this.jLabel).addClass(\"radio-inline\");\n        this.jOptionsDiv.appendChild(this.jLabel);\n        this.jTextArea = document.createElement(\"textarea\");\n        let self = this;\n        this.jTextArea.onchange = function () {\n            self.isAnswered = true;\n        };\n        this.jTextArea.id = this.divid + \"_solution\";\n        $(this.jTextArea).attr(\"aria-label\", \"textarea\");\n        $(this.jTextArea).css(\"display:inline, width:530px\");\n        $(this.jTextArea).addClass(\"form-control\");\n        this.jTextArea.rows = 4;\n        this.jTextArea.cols = 50;\n        this.jLabel.appendChild(this.jTextArea);\n        this.jTextArea.onchange = function () {\n            this.feedbackDiv.innerHTML = \"Your answer has not been saved yet!\";\n            $(this.feedbackDiv).removeClass(\"alert-success\");\n            $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        }.bind(this);\n        this.fieldSet.appendChild(document.createElement(\"br\"));\n        if (this.mathjax) {\n            this.renderedAnswer = document.createElement(\"div\");\n            $(this.renderedAnswer).addClass(\"latexoutput\");\n            this.fieldSet.appendChild(this.renderedAnswer);\n        }\n        this.buttonDiv = document.createElement(\"div\");\n        this.fieldSet.appendChild(this.buttonDiv);\n        this.submitButton = document.createElement(\"button\");\n        $(this.submitButton).addClass(\"btn btn-success\");\n        this.submitButton.type = \"button\";\n        this.submitButton.textContent = \"Save\";\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.logCurrentAnswer();\n            this.renderFeedback();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.randomSpan = document.createElement(\"span\");\n        this.randomSpan.innerHTML = \"Instructor's Feedback\";\n        this.fieldSet.appendChild(this.randomSpan);\n        this.otherOptionsDiv = document.createElement(\"div\");\n        $(this.otherOptionsDiv).css(\"padding-left:20px\");\n        $(this.otherOptionsDiv).addClass(\"journal-options\");\n        this.fieldSet.appendChild(this.otherOptionsDiv);\n        // add a feedback div to give user feedback\n        this.feedbackDiv = document.createElement(\"div\");\n        //$(this.feedbackDiv).addClass(\"bg-info form-control\");\n        //$(this.feedbackDiv).css(\"width:530px, background-color:#eee, font-style:italic\");\n        $(this.feedbackDiv).css(\"width:530px, font-style:italic\");\n        this.feedbackDiv.id = this.divid + \"_feedback\";\n        this.feedbackDiv.innerHTML = \"You have not answered this question yet.\";\n        $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        //this.otherOptionsDiv.appendChild(this.feedbackDiv);\n        this.fieldSet.appendChild(this.feedbackDiv);\n        //this.fieldSet.appendChild(document.createElement(\"br\"));\n        $(this.origElem).replaceWith(this.containerDiv);\n        // This is a stopgap measure for when MathJax is not loaded at all.  There is another\n        // more difficult case that when MathJax is loaded asynchronously we will get here\n        // before MathJax is loaded.  In that case we will need to implement something\n        // like `the solution described here <https://stackoverflow.com/questions/3014018/how-to-detect-when-mathjax-is-fully-loaded>`_\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(this.containerDiv)\n        }\n    }\n\n    renderMath(value) {\n        if (this.mathjax) {\n            value = value.replace(/\\$\\$(.*?)\\$\\$/g, \"\\\\[ $1 \\\\]\");\n            value = value.replace(/\\$(.*?)\\$/g, \"\\\\( $1 \\\\)\");\n            $(this.renderedAnswer).text(value);\n            this.queueMathJax(this.renderedAnswer)\n        }\n    }\n\n    checkCurrentAnswer() { }\n\n    async logCurrentAnswer(sid) {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"shortanswer\",\n            act: value,\n            answer: value,\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n\n    renderFeedback() {\n        this.feedbackDiv.innerHTML = \"Your answer has been saved.\";\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n    setLocalStorage(data) {\n        if (!this.graderactive) {\n            let key = this.localStorageKey();\n            localStorage.setItem(key, JSON.stringify(data));\n        }\n    }\n    checkLocalStorage() {\n        // Repopulates the short answer text\n        // which was stored into local storage.\n        var answer = \"\";\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    var storedData = JSON.parse(ex);\n                    answer = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                let solution = $(\"#\" + this.divid + \"_solution\");\n                solution.text(answer);\n                this.renderMath(answer);\n                this.feedbackDiv.innerHTML =\n                    \"Your current saved answer is shown above.\";\n                $(this.feedbackDiv).removeClass(\"alert-danger\");\n                $(this.feedbackDiv).addClass(\"alert alert-success\");\n            }\n        }\n    }\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        this.answer = data.answer;\n        this.jTextArea.value = this.answer;\n        this.renderMath(this.answer);\n\n        let p = document.createElement(\"p\");\n        this.jInputDiv.appendChild(p);\n        var tsString = \"\";\n        if (data.timestamp) {\n            tsString = new Date(data.timestamp).toLocaleString();\n        } else {\n            tsString = \"\";\n        }\n        $(p).text(tsString);\n        if (data.last_answer) {\n            this.current_answer = \"ontime\";\n            let toggle_answer_button = document.createElement(\"button\");\n            toggle_answer_button.type = \"button\";\n            $(toggle_answer_button).text(\"Show Late Answer\");\n            $(toggle_answer_button).addClass(\"btn btn-warning\");\n            $(toggle_answer_button).css(\"margin-left\", \"5px\");\n\n            $(toggle_answer_button).click(\n                function () {\n                    var display_timestamp, button_text;\n                    if (this.current_answer === \"ontime\") {\n                        this.jTextArea.value = data.last_answer;\n                        this.answer = data.last_answer;\n                        display_timestamp = new Date(\n                            data.last_timestamp\n                        ).toLocaleString();\n                        button_text = \"Show on-Time Answer\";\n                        this.current_answer = \"late\";\n                    } else {\n                        this.jTextArea.value = data.answer;\n                        this.answer = data.answer;\n                        display_timestamp = tsString;\n                        button_text = \"Show Late Answer\";\n                        this.current_answer = \"ontime\";\n                    }\n                    this.renderMath(this.answer);\n                    $(p).text(`Submitted: ${display_timestamp}`);\n                    $(toggle_answer_button).text(button_text);\n                }.bind(this)\n            );\n\n            this.buttonDiv.appendChild(toggle_answer_button);\n        }\n        let feedbackStr = \"Your current saved answer is shown above.\";\n        if (typeof data.score !== \"undefined\") {\n            feedbackStr = `Score: ${data.score}`;\n        }\n        if (data.comment) {\n            feedbackStr += ` -- ${data.comment}`;\n        }\n        this.feedbackDiv.innerHTML = feedbackStr;\n\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n\n    disableInteraction() {\n        this.jTextArea.disabled = true;\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).bind(\"runestone:login-complete\", function () {\n    $(\"[data-component=shortanswer]\").each(function () {\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                saList[this.id] = new ShortAnswer({\n                    orig: this,\n                    useRunestoneServices: eBookConfig.useRunestoneServices,\n                });\n            } catch (err) {\n                console.log(`Error rendering ShortAnswer Problem ${this.id}\n                Details: ${err}`);\n            }\n        }\n    });\n});\n","import ShortAnswer from \"./shortanswer.js\";\n\nexport default class TimedShortAnswer extends ShortAnswer {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.containerDiv);\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        return \"I\"; // we ignore this in the grading\n    }\n    hideFeedback() {\n        $(this.feedbackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.shortanswer = function (opts) {\n    if (opts.timed) {\n        return new TimedShortAnswer(opts);\n    }\n    return new ShortAnswer(opts);\n};\n","/*==========================================\n========      Master timed.js     =========\n============================================\n===     This file contains the JS for    ===\n===     the Runestone timed component.   ===\n============================================\n===              Created By              ===\n===             Kirby Olson              ===\n===               6/11/15                ===\n==========================================*/\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport TimedFITB from \"../../fitb/js/timedfitb.js\";\nimport TimedMC from \"../../mchoice/js/timedmc.js\";\nimport TimedShortAnswer from \"../../shortanswer/js/timed_shortanswer.js\";\nimport ACFactory from \"../../activecode/js/acfactory.js\";\nimport TimedClickableArea from \"../../clickableArea/js/timedclickable\";\nimport TimedDragNDrop from \"../../dragndrop/js/timeddnd.js\";\nimport TimedParsons from \"../../parsons/js/timedparsons.js\";\nimport SelectOne from \"../../selectquestion/js/selectone\";\nimport \"../css/timed.css\";\n\nexport var TimedList = {}; // Timed dictionary\n\n// Timed constructor\nexport default class Timed extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig;\n        this.origElem = orig; // the entire element of this timed assessment and all of its children\n        this.divid = orig.id;\n        this.children = this.origElem.childNodes;\n        this.visited = [];\n        this.timeLimit = 0;\n        this.limitedTime = false;\n        if (!isNaN($(this.origElem).data(\"time\"))) {\n            this.timeLimit = parseInt($(this.origElem).data(\"time\"), 10) * 60; // time in seconds to complete the exam\n            this.startingTime = this.timeLimit;\n            this.limitedTime = true;\n        }\n        this.showFeedback = true;\n        if ($(this.origElem).is(\"[data-no-feedback]\")) {\n            this.showFeedback = false;\n        }\n        this.showResults = true;\n        if ($(this.origElem).is(\"[data-no-result]\")) {\n            this.showResults = false;\n        }\n        this.random = false;\n        if ($(this.origElem).is(\"[data-random]\")) {\n            this.random = true;\n        }\n        this.showTimer = true;\n        if ($(this.origElem).is(\"[data-no-timer]\")) {\n            this.showTimer = false;\n        }\n        this.fullwidth = false;\n        if ($(this.origElem).is(\"[data-fullwidth]\")) {\n            this.fullwidth = true;\n        }\n        this.nopause = false;\n        if ($(this.origElem).is(\"[data-no-pause]\")) {\n            this.nopause = true;\n        }\n        eBookConfig.enableScratchAC = false;\n        this.running = 0;\n        this.paused = 0;\n        this.done = 0;\n        this.taken = 0;\n        this.score = 0;\n        this.incorrect = 0;\n        this.correctStr = \"\";\n        this.incorrectStr = \"\";\n        this.skippedStr = \"\";\n        this.skipped = 0;\n        this.currentQuestionIndex = 0; // Which question is currently displaying on the page\n        this.renderedQuestionArray = []; // list of all problems\n        this.getNewChildren();\n        // One small step to eliminate students from doing view source\n        // this won't stop anyone with determination but may prevent casual peeking\n        if (!eBookConfig.enableDebug) {\n            document.body.oncontextmenu = function () {\n                return false;\n            };\n        }\n        this.checkAssessmentStatus().then(\n            function () {\n                this.renderTimedAssess();\n            }.bind(this)\n        );\n    }\n\n    getNewChildren() {\n        this.newChildren = [];\n        for (var i = 0; i < this.origElem.childNodes.length; i++) {\n            this.newChildren.push(this.origElem.childNodes[i]);\n        }\n    }\n\n    async checkAssessmentStatus() {\n        // Has the user taken this exam?  Inquiring minds want to know\n        // If a user has not taken this exam then we want to make sure\n        // that if a question has been seen by the student before we do\n        // not populate previous answers.\n        let sendInfo = {\n            div_id: this.divid,\n            course_name: eBookConfig.course,\n        };\n        console.log(sendInfo);\n        if (eBookConfig.useRunestoneServices) {\n            let request = new Request(\n                `${eBookConfig.new_server_prefix}/assessment/tookTimedAssessment`,\n                {\n                    method: \"POST\",\n                    headers: this.jsonHeaders,\n                    body: JSON.stringify(sendInfo),\n                }\n            );\n            let response = await fetch(request);\n            let data = await response.json();\n            data = data.detail;\n            this.taken = data.tookAssessment;\n            this.assessmentTaken = this.taken;\n            if (!this.taken) {\n                localStorage.clear();\n            }\n            console.log(\"done with check status\");\n            return response;\n        } else {\n            this.taken = false;\n            this.assessmentTaken = false;\n            return Promise.resolve();\n        }\n    }\n\n    /*===============================\n    === Generating new Timed HTML ===\n    ===============================*/\n    async renderTimedAssess() {\n        console.log(\"rendering timed \");\n        // create renderedQuestionArray returns a promise\n        //\n        this.createRenderedQuestionArray();\n        if (this.random) {\n            this.randomizeRQA();\n        }\n        this.renderContainer();\n        this.renderTimer();\n        await this.renderControlButtons();\n        this.containerDiv.appendChild(this.timedDiv); // This can't be appended in renderContainer because then it renders above the timer and control buttons.\n        if (this.renderedQuestionArray.length > 1) this.renderNavControls();\n        this.renderSubmitButton();\n        this.renderFeedbackContainer();\n        this.useRunestoneServices = eBookConfig.useRunestoneServices;\n        // Replace intermediate HTML with rendered HTML\n        $(this.origElem).replaceWith(this.containerDiv);\n        // check if already taken and if so show results\n        this.styleExamElements(); // rename to renderPossibleResults\n        this.checkServer(\"timedExam\", true);\n    }\n\n    renderContainer() {\n        this.containerDiv = document.createElement(\"div\"); // container for the entire Timed Component\n        if (this.fullwidth) {\n            // allow the container to fill the width - barb\n            $(this.containerDiv).attr({\n                style: \"max-width:none\",\n            });\n        }\n        this.containerDiv.id = this.divid;\n        this.timedDiv = document.createElement(\"div\"); // div that will hold the questions for the timed assessment\n        this.navDiv = document.createElement(\"div\"); // For navigation control\n        $(this.navDiv).attr({\n            style: \"text-align:center\",\n        });\n        this.flagDiv = document.createElement(\"div\"); // div that will hold the \"Flag Question\" button\n        $(this.flagDiv).attr({\n            style: \"text-align: center\",\n        });\n        this.switchContainer = document.createElement(\"div\");\n        this.switchContainer.classList.add(\"switchcontainer\");\n        this.switchDiv = document.createElement(\"div\"); // is replaced by the questions\n        this.timedDiv.appendChild(this.navDiv);\n        this.timedDiv.appendChild(this.flagDiv); // add flagDiv to timedDiv, which holds components for navigation and questions for timed assessment\n        this.timedDiv.appendChild(this.switchContainer);\n        this.switchContainer.appendChild(this.switchDiv);\n        $(this.timedDiv).attr({\n            id: \"timed_Test\",\n            style: \"display:none\",\n        });\n    }\n\n    renderTimer() {\n        this.wrapperDiv = document.createElement(\"div\");\n        this.timerContainer = document.createElement(\"P\");\n        this.wrapperDiv.id = this.divid + \"-startWrapper\";\n        this.timerContainer.id = this.divid + \"-output\";\n        this.wrapperDiv.appendChild(this.timerContainer);\n        this.showTime();\n    }\n\n    renderControlButtons() {\n        this.controlDiv = document.createElement(\"div\");\n        $(this.controlDiv).attr({\n            id: \"controls\",\n            style: \"text-align: center\",\n        });\n        this.startBtn = document.createElement(\"button\");\n        this.pauseBtn = document.createElement(\"button\");\n        $(this.startBtn).attr({\n            class: \"btn btn-success\",\n            id: \"start\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.startBtn.textContent = \"Start\";\n        this.startBtn.addEventListener(\n            \"click\",\n            async function () {\n                $(this.finishButton).hide(); // hide the finish button for now\n                $(this.flagButton).show();\n                let mess = document.createElement(\"p\");\n                mess.innerHTML =\n                    \"<strong>Warning: You will not be able to continue the exam if you close this tab, close the window, or navigate away from this page!</strong>  Make sure you click the Finish Exam button when you are done to submit your work!\";\n                this.controlDiv.appendChild(mess);\n                mess.classList.add(\"examwarning\");\n                await this.renderTimedQuestion();\n                this.startAssessment();\n            }.bind(this),\n            false\n        );\n        $(this.pauseBtn).attr({\n            class: \"btn btn-default\",\n            id: \"pause\",\n            disabled: \"true\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.pauseBtn.textContent = \"Pause\";\n        this.pauseBtn.addEventListener(\n            \"click\",\n            function () {\n                this.pauseAssessment();\n            }.bind(this),\n            false\n        );\n        if (!this.taken) {\n            this.controlDiv.appendChild(this.startBtn);\n        }\n        if (!this.nopause) {\n            this.controlDiv.appendChild(this.pauseBtn);\n        }\n        this.containerDiv.appendChild(this.wrapperDiv);\n        this.containerDiv.appendChild(this.controlDiv);\n    }\n\n    renderNavControls() {\n        // making \"Prev\" button\n        this.pagNavList = document.createElement(\"ul\");\n        $(this.pagNavList).addClass(\"pagination\");\n        this.leftContainer = document.createElement(\"li\");\n        this.leftNavButton = document.createElement(\"button\");\n        this.leftNavButton.innerHTML = \"&#8249; Prev\";\n        $(this.leftNavButton).attr(\"aria-label\", \"Previous\");\n        $(this.leftNavButton).attr(\"tabindex\", \"0\");\n        $(this.leftNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"prev\");\n        $(this.leftNavButton).css(\"cursor\", \"pointer\");\n        this.leftContainer.appendChild(this.leftNavButton);\n        this.pagNavList.appendChild(this.leftContainer);\n        // making \"Flag Question\" button\n        this.flaggingPlace = document.createElement(\"ul\");\n        $(this.flaggingPlace).addClass(\"pagination\");\n        this.flagContainer = document.createElement(\"li\");\n        this.flagButton = document.createElement(\"button\");\n        $(this.flagButton).addClass(\"flagBtn\");\n        this.flagButton.innerHTML = \"Flag Question\"; // name on button\n        $(this.flagButton).attr(\"aria-labelledby\", \"Flag\");\n        $(this.flagButton).attr(\"tabindex\", \"5\");\n        $(this.flagButton).attr(\"role\", \"button\");\n        $(this.flagButton).attr(\"id\", \"flag\");\n        $(this.flagButton).css(\"cursor\", \"pointer\");\n        this.flagContainer.appendChild(this.flagButton); // adding button to container\n        this.flaggingPlace.appendChild(this.flagContainer); // adding container to flaggingPlace\n        // making \"Next\" button\n        this.rightContainer = document.createElement(\"li\");\n        this.rightNavButton = document.createElement(\"button\");\n        $(this.rightNavButton).attr(\"aria-label\", \"Next\");\n        $(this.rightNavButton).attr(\"tabindex\", \"0\");\n        $(this.rightNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"next\");\n        this.rightNavButton.innerHTML = \"Next &#8250;\";\n        $(this.rightNavButton).css(\"cursor\", \"pointer\");\n        this.rightContainer.appendChild(this.rightNavButton);\n        this.pagNavList.appendChild(this.rightContainer);\n        this.ensureButtonSafety();\n        this.navDiv.appendChild(this.pagNavList);\n        this.flagDiv.appendChild(this.flaggingPlace); // adds flaggingPlace to the flagDiv\n        this.break = document.createElement(\"br\");\n        this.navDiv.appendChild(this.break);\n        // render the question number jump buttons\n        this.qNumList = document.createElement(\"ul\");\n        $(this.qNumList).attr(\"id\", \"pageNums\");\n        this.qNumWrapperList = document.createElement(\"ul\");\n        $(this.qNumWrapperList).addClass(\"pagination\");\n        var tmpLi, tmpA;\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            tmpLi = document.createElement(\"li\");\n            tmpA = document.createElement(\"a\");\n            tmpA.innerHTML = i + 1;\n            $(tmpA).css(\"cursor\", \"pointer\");\n            if (i === 0) {\n                $(tmpLi).addClass(\"active\");\n            }\n            tmpLi.appendChild(tmpA);\n            this.qNumWrapperList.appendChild(tmpLi);\n        }\n        this.qNumList.appendChild(this.qNumWrapperList);\n        this.navDiv.appendChild(this.qNumList);\n        this.navBtnListeners();\n        this.flagBtnListener(); // listens for click on flag button\n        $(this.flagButton).hide();\n    }\n\n    // when moving off of a question in an active exam:\n    // 1. show that the question has been seen, or mark it broken if it is in error.\n    // 2. check and log the current answer\n    async navigateAway() {\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"broken_exam\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"broken\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"exam_ended\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"toolate\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].question\n                .isAnswered\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"answered\");\n            await this.renderedQuestionArray[\n                this.currentQuestionIndex\n            ].question.checkCurrentAnswer();\n            if (!this.done) {\n                await this.renderedQuestionArray[\n                    this.currentQuestionIndex\n                ].question.logCurrentAnswer();\n            }\n        }\n    }\n    async handleNextPrev(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        var target = $(event.target).text();\n        if (target.match(/Next/)) {\n            // checks given text to match \"Next\"\n            if ($(this.rightContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex++;\n        } else if (target.match(/Prev/)) {\n            // checks given text to match \"Prev\"\n            if ($(this.leftContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex--;\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).hasClass(\"flagcolor\")\n        ) {\n            // checking for class\n            this.flagButton.innerHTML = \"Unflag Question\"; // changes text on button\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\"; // changes text on button\n        }\n    }\n\n    async handleFlag(event) {\n        // called when flag button is clicked\n        var target = $(event.target).text();\n        if (target.match(/Flag Question/)) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"flagcolor\"); // class will change color of question block\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).removeClass(\"flagcolor\"); // will restore current color of question block\n            this.flagButton.innerHTML = \"Flag Question\"; // also sets name back\n        }\n    }\n\n    async handleNumberedNav(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n\n        var target = $(event.target).text();\n        let oldIndex = this.currentQuestionIndex;\n        this.currentQuestionIndex = parseInt(target) - 1;\n        if (this.currentQuestionIndex > this.renderedQuestionArray.length) {\n            console.log(`Error: bad index for ${target}`);\n            this.currentQuestionIndex = oldIndex;\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\" // checking for flagcolor class\n            ).hasClass(\"flagcolor\")\n        ) {\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\";\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n    }\n\n    // set up events for navigation\n    navBtnListeners() {\n        // Next and Prev Listener\n        this.pagNavList.addEventListener(\n            \"click\",\n            this.handleNextPrev.bind(this),\n            false\n        );\n\n        // Numbered Listener\n        this.qNumList.addEventListener(\n            \"click\",\n            this.handleNumberedNav.bind(this),\n            false\n        );\n    }\n\n    // set up event for flag\n    flagBtnListener() {\n        this.flaggingPlace.addEventListener(\n            \"click\",\n            this.handleFlag.bind(this), // calls this to take action\n            false\n        );\n    }\n\n    renderSubmitButton() {\n        this.buttonContainer = document.createElement(\"div\");\n        $(this.buttonContainer).attr({\n            style: \"text-align:center\",\n        });\n        this.finishButton = document.createElement(\"button\");\n        $(this.finishButton).attr({\n            id: \"finish\",\n            class: \"btn btn-primary\",\n        });\n        this.finishButton.textContent = \"Finish Exam\";\n        this.finishButton.addEventListener(\n            \"click\",\n            async function () {\n                if (\n                    window.confirm(\n                        \"Clicking OK means you are ready to submit your answers and are finished with this assessment.\"\n                    )\n                ) {\n                    await this.finishAssessment();\n                    $(this.flagButton).hide();\n                }\n            }.bind(this),\n            false\n        );\n        this.controlDiv.appendChild(this.finishButton);\n        $(this.finishButton).hide();\n        this.timedDiv.appendChild(this.buttonContainer);\n    }\n    ensureButtonSafety() {\n        if (this.currentQuestionIndex === 0) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.rightContainer).removeClass(\"disabled\");\n            }\n            $(this.leftContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex >=\n            this.renderedQuestionArray.length - 1\n        ) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.leftContainer).removeClass(\"disabled\");\n            }\n            $(this.rightContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex > 0 &&\n            this.currentQuestionIndex < this.renderedQuestionArray.length - 1\n        ) {\n            $(this.rightContainer).removeClass(\"disabled\");\n            $(this.leftContainer).removeClass(\"disabled\");\n        }\n    }\n    renderFeedbackContainer() {\n        this.scoreDiv = document.createElement(\"P\");\n        this.scoreDiv.id = this.divid + \"results\";\n        this.scoreDiv.style.display = \"none\";\n        this.containerDiv.appendChild(this.scoreDiv);\n    }\n\n    createRenderedQuestionArray() {\n        // this finds all the assess questions in this timed assessment\n        // We need to make a list of all the questions up front so we can set up navigation\n        // but we do not want to render the questions until the student has navigated\n        // Also adds them to this.renderedQuestionArray\n\n        // todo:  This needs to be updated to account for the runestone div wrapper.\n\n        // To accommodate the selectquestion type -- which is async! we need to wrap\n        // all of this in a promise, so that we don't continue to render the timed\n        // exam until all of the questions have been realized.\n        var opts;\n        for (var i = 0; i < this.newChildren.length; i++) {\n            var tmpChild = this.newChildren[i];\n            opts = {\n                state: \"prepared\",\n                orig: tmpChild,\n                question: {},\n                useRunestoneServices: eBookConfig.useRunestoneServices,\n                timed: true,\n                assessmentTaken: this.taken,\n                timedWrapper: this.divid,\n                initAttempts: 0,\n            };\n            if ($(tmpChild).children(\"[data-component]\").length > 0) {\n                tmpChild = $(tmpChild).children(\"[data-component]\")[0];\n                opts.orig = tmpChild;\n            }\n            if ($(tmpChild).is(\"[data-component]\")) {\n                this.renderedQuestionArray.push(opts);\n            }\n        }\n    }\n\n    randomizeRQA() {\n        var currentIndex = this.renderedQuestionArray.length,\n            temporaryValue,\n            randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = this.renderedQuestionArray[currentIndex];\n            this.renderedQuestionArray[currentIndex] =\n                this.renderedQuestionArray[randomIndex];\n            this.renderedQuestionArray[randomIndex] = temporaryValue;\n        }\n    }\n\n    async renderTimedQuestion() {\n        if (this.currentQuestionIndex >= this.renderedQuestionArray.length) {\n            // sometimes the user clicks in the event area for the qNumList\n            // But misses a number in that case the text is the concatenation\n            // of all the numbers in the list!\n            return;\n        }\n        // check the renderedQuestionArray to see if it has been rendered.\n        let opts = this.renderedQuestionArray[this.currentQuestionIndex];\n        let currentQuestion;\n        if (\n            opts.state === \"prepared\" ||\n            opts.state === \"forreview\" ||\n            (opts.state === \"broken_exam\" && opts.initAttempts < 3)\n        ) {\n            let tmpChild = opts.orig;\n            if ($(tmpChild).is(\"[data-component=selectquestion]\")) {\n                if (this.done && opts.state == \"prepared\") {\n                    this.renderedQuestionArray[\n                        this.currentQuestionIndex\n                    ].state = \"exam_ended\";\n                } else {\n                    // SelectOne is async and will replace itself in this array with\n                    // the actual selected question\n                    opts.rqa = this.renderedQuestionArray;\n                    let newq = new SelectOne(opts);\n                    this.renderedQuestionArray[this.currentQuestionIndex] = {\n                        question: newq,\n                    };\n                    try {\n                        await newq.initialize();\n                        if (opts.state == \"broken_exam\") {\n                            // remove the broken class from this question if we get here.\n                            $(\n                                `ul#pageNums > ul > li:eq(${this.currentQuestionIndex})`\n                            ).removeClass(\"broken\");\n                        }\n                    } catch (e) {\n                        opts.state = \"broken_exam\";\n                        this.renderedQuestionArray[this.currentQuestionIndex] =\n                            opts;\n                        console.log(\n                            `Error initializing question: Details ${e}`\n                        );\n                    }\n                }\n            } else if ($(tmpChild).is(\"[data-component]\")) {\n                let componentKind = $(tmpChild).data(\"component\");\n                this.renderedQuestionArray[this.currentQuestionIndex] = {\n                    question: window.component_factory[componentKind](opts),\n                };\n            }\n        } else if (opts.state === \"broken_exam\") {\n            return;\n        }\n\n        currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        if (opts.state === \"forreview\") {\n            await currentQuestion.checkCurrentAnswer();\n            currentQuestion.renderFeedback();\n            currentQuestion.disableInteraction();\n        }\n\n        if (!this.visited.includes(this.currentQuestionIndex)) {\n            this.visited.push(this.currentQuestionIndex);\n            if (\n                this.visited.length === this.renderedQuestionArray.length &&\n                !this.done\n            ) {\n                $(this.finishButton).show();\n            }\n        }\n\n        if (currentQuestion.containerDiv) {\n            $(this.switchDiv).replaceWith(currentQuestion.containerDiv);\n            this.switchDiv = currentQuestion.containerDiv;\n        }\n\n        // If the timed component has listeners, those might need to be reinitialized\n        // This flag will only be set in the elements that need it--it will be undefined in the others and thus evaluate to false\n        if (currentQuestion.needsReinitialization) {\n            currentQuestion.reinitializeListeners(this.taken);\n        }\n    }\n\n    /*=================================\n    === Timer and control Functions ===\n    =================================*/\n    handlePrevAssessment() {\n        $(this.startBtn).hide();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        $(this.finishButton).attr(\"disabled\", true);\n        this.running = 0;\n        this.done = 1;\n        // showFeedback sand showResults should both be true before we show the\n        // questions and their state of correctness.\n        if (this.showResults && this.showFeedback) {\n            $(this.timedDiv).show();\n            this.restoreAnsweredQuestions(); // do not log these results\n        } else {\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n    }\n    startAssessment() {\n        if (!this.taken) {\n            $(\"#relations-next\").hide(); // hide the next page button for now\n            $(\"#relations-prev\").hide(); // hide the previous button for now\n            $(this.startBtn).hide();\n            $(this.pauseBtn).attr(\"disabled\", false);\n            if (this.running === 0 && this.paused === 0) {\n                this.running = 1;\n                this.lastTime = Date.now();\n                $(this.timedDiv).show();\n                this.increment();\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"start\",\n                    div_id: this.divid,\n                });\n                var timeStamp = new Date();\n                var storageObj = {\n                    answer: [0, 0, this.renderedQuestionArray.length, 0],\n                    timestamp: timeStamp,\n                };\n                localStorage.setItem(\n                    this.localStorageKey(),\n                    JSON.stringify(storageObj)\n                );\n            }\n            $(window).on(\n                \"beforeunload\",\n                function (event) {\n                    // this actual value gets ignored by newer browsers\n                    if (this.done) {\n                        return;\n                    }\n                    event.preventDefault();\n                    event.returnValue =\n                        \"Are you sure you want to leave?  Your work will be lost! And you will need your instructor to reset the exam!\";\n                    return \"Are you sure you want to leave?  Your work will be lost!\";\n                }.bind(this)\n            );\n            window.addEventListener(\n                \"pagehide\",\n                async function (event) {\n                    if (!this.done) {\n                        await this.finishAssessment();\n                        console.log(\"Exam exited by leaving page\");\n                    }\n                }.bind(this)\n            );\n        } else {\n            this.handlePrevAssessment();\n        }\n    }\n    pauseAssessment() {\n        if (this.done === 0) {\n            if (this.running === 1) {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"pause\",\n                    div_id: this.divid,\n                });\n                this.running = 0;\n                this.paused = 1;\n                this.pauseBtn.innerHTML = \"Resume\";\n                $(this.timedDiv).hide();\n            } else {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"resume\",\n                    div_id: this.divid,\n                });\n                this.running = 1;\n                this.paused = 0;\n                this.increment();\n                this.pauseBtn.innerHTML = \"Pause\";\n                $(this.timedDiv).show();\n            }\n        }\n    }\n\n    showTime() {\n        if (this.showTimer) {\n            var mins = Math.floor(this.timeLimit / 60);\n            var secs = Math.floor(this.timeLimit) % 60;\n            var minsString = mins;\n            var secsString = secs;\n            if (mins < 10) {\n                minsString = \"0\" + mins;\n            }\n            if (secs < 10) {\n                secsString = \"0\" + secs;\n            }\n            var beginning = \"Time Remaining    \";\n            if (!this.limitedTime) {\n                beginning = \"Time Taken    \";\n            }\n            var timeString = beginning + minsString + \":\" + secsString;\n            if (this.done || this.taken) {\n                var minutes = Math.floor(this.timeTaken / 60);\n                var seconds = Math.floor(this.timeTaken % 60);\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                timeString = \"Time taken: \" + minutes + \":\" + seconds;\n            }\n            this.timerContainer.innerHTML = timeString;\n            var timeTips = document.getElementsByClassName(\"timeTip\");\n            for (var i = 0; i <= timeTips.length - 1; i++) {\n                timeTips[i].title = timeString;\n            }\n        } else {\n            $(this.timerContainer).hide();\n        }\n    }\n\n    increment() {\n        // if running (not paused) and not taken\n        if (this.running === 1 && !this.taken) {\n            setTimeout(\n                function () {\n                    // When a browser loses focus, setTimeout may not be called on the\n                    // schedule expected.  Browsers are free to save power by lengthening\n                    // the interval to some longer time.  So we cannot just subtract 1\n                    // from the timeLimit we need to measure the elapsed time from the last\n                    // call to the current call and subtract that number of seconds.\n                    let currentTime = Date.now();\n                    if (this.limitedTime) {\n                        // If there's a time limit, count down to 0\n                        this.timeLimit =\n                            this.timeLimit -\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    } else {\n                        // Else count up to keep track of how long it took to complete\n                        this.timeLimit =\n                            this.timeLimit +\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    }\n                    this.lastTime = currentTime;\n                    localStorage.setItem(\n                        eBookConfig.email + \":\" + this.divid + \"-time\",\n                        this.timeLimit\n                    );\n                    this.showTime();\n                    if (this.timeLimit > 0) {\n                        this.increment();\n                        // ran out of time\n                    } else {\n                        $(this.startBtn).attr({\n                            disabled: \"true\",\n                        });\n                        $(this.finishButton).attr({\n                            disabled: \"true\",\n                        });\n                        this.running = 0;\n                        this.done = 1;\n                        if (!this.taken) {\n                            this.taken = true;\n                            // embed the message in the page -- an alert actually prevents\n                            // the answers from being submitted and if a student closes their\n                            // laptop then the answers will not be submitted ever!  Even when they\n                            // reopen the laptop their session cookie is likely invalid.\n                            let mess = document.createElement(\"h1\");\n                            mess.innerHTML =\n                                \"Sorry but you ran out of time. Your answers are being submitted\";\n                            this.controlDiv.appendChild(mess);\n                            this.finishAssessment();\n                        }\n                    }\n                }.bind(this),\n                1000\n            );\n        }\n    }\n\n    styleExamElements() {\n        // Checks if this exam has been taken before\n        $(this.timerContainer).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(this.scoreDiv).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(\".tooltipTime\").css({\n            margin: \"0\",\n            padding: \"0\",\n            \"background-color\": \"black\",\n            color: \"white\",\n        });\n    }\n\n    async finishAssessment() {\n        $(\"#relations-next\").show(); // show the next page button for now\n        $(\"#relations-prev\").show(); // show the previous button for now\n        if (!this.showFeedback) {\n            // bje - changed from showResults\n            $(this.timedDiv).hide();\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n        this.findTimeTaken();\n        this.running = 0;\n        this.done = 1;\n        this.taken = 1;\n        await this.finalizeProblems();\n        this.checkScore();\n        this.displayScore();\n        this.storeScore();\n        this.logScore();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        this.finishButton.disabled = true;\n        $(window).off(\"beforeunload\");\n        // turn off the pagehide listener\n        let assignment_id = this.divid;\n        setTimeout(function () {\n            jQuery.ajax({\n                url: eBookConfig.app + \"/assignments/student_autograde\",\n                type: \"POST\",\n                dataType: \"JSON\",\n                data: {\n                    assignment_id: assignment_id,\n                    is_timed: true,\n                },\n                success: function (retdata) {\n                    if (retdata.success == false) {\n                        console.log(retdata.message);\n                    } else {\n                        console.log(\"Autograder completed\");\n                    }\n                },\n            });\n        }, 2000);\n    }\n\n    // finalizeProblems\n    // ----------------\n    async finalizeProblems() {\n        // Because we have submitted each question as we navigate we only need to\n        // send the final version of the question the student is on when they press the\n        // finish exam button.\n\n        var currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        await currentQuestion.checkCurrentAnswer();\n        await currentQuestion.logCurrentAnswer();\n        currentQuestion.renderFeedback();\n        currentQuestion.disableInteraction();\n\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            let currentQuestion = this.renderedQuestionArray[i];\n            // set the state to forreview so we know that feedback may be appropriate\n            if (currentQuestion.state !== \"broken_exam\") {\n                currentQuestion.state = \"forreview\";\n                currentQuestion.question.disableInteraction();\n            }\n        }\n\n        if (!this.showFeedback) {\n            this.hideTimedFeedback();\n        }\n    }\n\n    // restoreAnsweredQuestions\n    // ------------------------\n    restoreAnsweredQuestions() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i];\n            if (currentQuestion.state === \"prepared\") {\n                currentQuestion.state = \"forreview\";\n            }\n        }\n    }\n\n    // hideTimedFeedback\n    // -----------------\n    hideTimedFeedback() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i].question;\n            currentQuestion.hideFeedback();\n        }\n    }\n\n    // checkScore\n    // ----------\n    // This is a simple all or nothing score of one point per question for\n    // that includes our best guess if a question was skipped.\n    checkScore() {\n        this.correctStr = \"\";\n        this.skippedStr = \"\";\n        this.incorrectStr = \"\";\n        // Gets the score of each problem\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var correct =\n                this.renderedQuestionArray[i].question.checkCorrectTimed();\n            if (correct == \"T\") {\n                this.score++;\n                this.correctStr = this.correctStr + (i + 1) + \", \";\n            } else if (correct == \"F\") {\n                this.incorrect++;\n                this.incorrectStr = this.incorrectStr + (i + 1) + \", \";\n            } else if (correct === null || correct === \"I\") {\n                this.skipped++;\n                this.skippedStr = this.skippedStr + (i + 1) + \", \";\n            } else {\n                // ignored question; just do nothing\n            }\n        }\n        // remove extra comma and space at end if any\n        if (this.correctStr.length > 0)\n            this.correctStr = this.correctStr.substring(\n                0,\n                this.correctStr.length - 2\n            );\n        else this.correctStr = \"None\";\n        if (this.skippedStr.length > 0)\n            this.skippedStr = this.skippedStr.substring(\n                0,\n                this.skippedStr.length - 2\n            );\n        else this.skippedStr = \"None\";\n        if (this.incorrectStr.length > 0)\n            this.incorrectStr = this.incorrectStr.substring(\n                0,\n                this.incorrectStr.length - 2\n            );\n        else this.incorrectStr = \"None\";\n    }\n    findTimeTaken() {\n        if (this.limitedTime) {\n            this.timeTaken = this.startingTime - this.timeLimit;\n        } else {\n            this.timeTaken = this.timeLimit;\n        }\n    }\n    storeScore() {\n        var storage_arr = [];\n        storage_arr.push(\n            this.score,\n            this.correctStr,\n            this.incorrect,\n            this.incorrectStr,\n            this.skipped,\n            this.skippedStr,\n            this.timeTaken\n        );\n        var timeStamp = new Date();\n        var storageObj = JSON.stringify({\n            answer: storage_arr,\n            timestamp: timeStamp,\n        });\n        localStorage.setItem(this.localStorageKey(), storageObj);\n    }\n    // _`timed exam endpoint parameters`\n    //----------------------------------\n    logScore() {\n        this.logBookEvent({\n            event: \"timedExam\",\n            act: \"finish\",\n            div_id: this.divid,\n            correct: this.score,\n            incorrect: this.incorrect,\n            skipped: this.skipped,\n            time_taken: this.timeTaken,\n        });\n    }\n    shouldUseServer(data) {\n        // We override the RunestoneBase version because there is no \"correct\" attribute, and there are 2 possible localStorage schemas\n        // --we also want to default to local storage because it contains more information specifically which questions are correct, incorrect, and skipped.\n        var storageDate;\n        if (localStorage.length === 0) return true;\n        var storageObj = localStorage.getItem(this.localStorageKey());\n        if (storageObj === null) return true;\n        try {\n            var storedData = JSON.parse(storageObj).answer;\n            if (storedData.length == 4) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[1] &&\n                    data.skipped == storedData[2] &&\n                    data.timeTaken == storedData[3]\n                )\n                    return true;\n            } else if (storedData.length == 7) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[2] &&\n                    data.skipped == storedData[4] &&\n                    data.timeTaken == storedData[6]\n                ) {\n                    return false; // In this case, because local storage has more info, we want to use that if it's consistent\n                }\n            }\n            storageDate = new Date(JSON.parse(storageObj[1]).timestamp);\n        } catch (err) {\n            // error while parsing; likely due to bad value stored in storage\n            console.log(err.message);\n            localStorage.removeItem(this.localStorageKey());\n            return true;\n        }\n        var serverDate = new Date(data.timestamp);\n        if (serverDate < storageDate) {\n            this.logScore();\n            return false;\n        }\n        return true;\n    }\n\n    checkLocalStorage() {\n        var len = localStorage.length;\n        if (len > 0) {\n            if (localStorage.getItem(this.localStorageKey()) !== null) {\n                this.taken = 1;\n                this.restoreAnswers(\"\");\n            } else {\n                this.taken = 0;\n            }\n        } else {\n            this.taken = 0;\n        }\n    }\n    async restoreAnswers(data) {\n        this.taken = 1;\n        var tmpArr;\n        if (data === \"\") {\n            try {\n                tmpArr = JSON.parse(\n                    localStorage.getItem(this.localStorageKey())\n                ).answer;\n            } catch (err) {\n                // error while parsing; likely due to bad value stored in storage\n                console.log(err.message);\n                localStorage.removeItem(this.localStorageKey());\n                this.taken = 0;\n                return;\n            }\n        } else {\n            // Parse results from the database\n            tmpArr = [\n                parseInt(data.correct),\n                parseInt(data.incorrect),\n                parseInt(data.skipped),\n                parseInt(data.timeTaken),\n                data.reset,\n            ];\n            this.setLocalStorage(tmpArr);\n        }\n        if (tmpArr.length == 1) {\n            // Exam was previously reset\n            this.reset = true;\n            this.taken = 0;\n            return;\n        }\n        if (tmpArr.length == 4) {\n            // Accidental Reload OR Database Entry\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 7) {\n            // Loaded Completed Exam\n            this.score = tmpArr[0];\n            this.correctStr = tmpArr[1];\n            this.incorrect = tmpArr[2];\n            this.incorrectStr = tmpArr[3];\n            this.skipped = tmpArr[4];\n            this.skippedStr = tmpArr[5];\n            this.timeTaken = tmpArr[6];\n        } else {\n            // Set localStorage in case of \"accidental\" reload\n            this.score = 0;\n            this.incorrect = 0;\n            this.skipped = this.renderedQuestionArray.length;\n            this.timeTaken = 0;\n        }\n        if (this.taken) {\n            if (this.skipped === this.renderedQuestionArray.length) {\n                this.showFeedback = false;\n            }\n            this.handlePrevAssessment();\n        }\n        await this.renderTimedQuestion();\n        this.displayScore();\n        this.showTime();\n    }\n    setLocalStorage(parsedData) {\n        var timeStamp = new Date();\n        var storageObj = {\n            answer: parsedData,\n            timestamp: timeStamp,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n    displayScore() {\n        if (this.showResults) {\n            var scoreString = \"\";\n            var numQuestions;\n            var percentCorrect;\n            // if we have some information\n            if (\n                this.correctStr.length > 0 ||\n                this.incorrectStr.length > 0 ||\n                this.skippedStr.length > 0\n            ) {\n                scoreString = `Num Correct: ${this.score}. Questions: ${this.correctStr}<br>Num Wrong: ${this.incorrect}. Questions: ${this.incorrectStr}<br>Num Skipped: ${this.skipped}. Questions: ${this.skippedStr}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString += \"Percent Correct: \" + percentCorrect + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            } else {\n                scoreString = `Num Correct: ${this.score}<br>Num Wrong: ${this.incorrect}<br>Num Skipped: ${this.skipped}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString += \"Percent Correct: \" + percentCorrect + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            }\n            this.highlightNumberedList();\n        } else {\n            $(this.scoreDiv).html(\n                \"Thank you for taking the exam.  Your answers have been recorded.\"\n            );\n            this.scoreDiv.style.display = \"block\";\n        }\n    }\n    highlightNumberedList() {\n        var correctCount = this.correctStr;\n        var incorrectCount = this.incorrectStr;\n        var skippedCount = this.skippedStr;\n        correctCount = correctCount.replace(/ /g, \"\").split(\",\");\n        incorrectCount = incorrectCount.replace(/ /g, \"\").split(\",\");\n        skippedCount = skippedCount.replace(/ /g, \"\").split(\",\");\n        $(function () {\n            var numberedBtns = $(\"ul#pageNums > ul > li\");\n            if (numberedBtns.hasClass(\"answered\")) {\n                numberedBtns.removeClass(\"answered\");\n            }\n            for (var i = 0; i < correctCount.length; i++) {\n                var test = parseInt(correctCount[i]) - 1;\n                numberedBtns\n                    .eq(parseInt(correctCount[i]) - 1)\n                    .addClass(\"correctCount\");\n            }\n            for (var j = 0; j < incorrectCount.length; j++) {\n                numberedBtns\n                    .eq(parseInt(incorrectCount[j]) - 1)\n                    .addClass(\"incorrectCount\");\n            }\n            for (var k = 0; k < skippedCount.length; k++) {\n                numberedBtns\n                    .eq(parseInt(skippedCount[k]) - 1)\n                    .addClass(\"skippedCount\");\n            }\n        });\n    }\n}\n\n/*=======================================================\n=== Function that calls the constructors on page load ===\n=======================================================*/\n$(document).bind(\"runestone:login-complete\", function () {\n    $(\"[data-component=timedAssessment]\").each(function (index) {\n        TimedList[this.id] = new Timed({\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        });\n    });\n});\n"],"names":["$","i18n","load","en","msg_no_answer","msg_fitb_check_me","msg_fitb_compare_me","FITBList","FITB","constructor","opts","super","orig","this","useRunestoneServices","origElem","divid","id","correct","feedbackArray","JSON","parse","scriptSelector","html","createFITBElement","caption","addCaption","checkServer","root_node","find","renderFITBInput","renderFITBButtons","renderFITBFeedbackDiv","replaceWith","containerDiv","document","createElement","children","clone","appendTo","remove","ba","attr","blankArray","toArray","blank","change","recordAnswered","bind","isAnswered","submitButton","textContent","class","name","type","addEventListener","checkCurrentAnswer","logCurrentAnswer","appendChild","compareButton","disabled","compareFITBAnswers","feedBackDiv","restoreAnswers","data","arr","answer","Array","isArray","Error","err","split","i","length","displayFeed","isCorrectArray","renderFeedback","checkLocalStorage","storedData","graderactive","localStorage","ex","getItem","localStorageKey","console","log","message","removeItem","setLocalStorage","key","setItem","stringify","given_arr","push","value","eBookConfig","enableCompareMe","enableCompareButton","evaluateAnswers","isTimed","async","sid","feedback","timestamp","Date","event","act","div_id","logBookEvent","detail","given","fbl","j","RegExp","test","assert","min","max","actual","is_correct","percent","filter","Boolean","removeClass","addClass","feedback_html","slice","innerHTML","MathJax","queueMathJax","body","course","jQuery","get","new_server_prefix","compareFITB","status","whatever","answers","res","miscdata","row","count","modal","disableInteraction","each","index","closest","TimedFITB","renderTimedIcon","inputDiv","hideButtons","needsReinitialization","hide","component","timeIconDiv","timeIcon","src","style","className","title","prepend","checkCorrectTimed","hideFeedback","display","reinitializeListeners","window","component_factory","fillintheblank","timed","saList","undefined","ShortAnswer","question","optional","is","mathjax","renderHTML","getAttribute","newForm","action","fieldSet","legend","firstLegendDiv","jInputDiv","jOptionsDiv","jLabel","jTextArea","self","onchange","css","rows","cols","feedbackDiv","renderedAnswer","buttonDiv","onclick","randomSpan","otherOptionsDiv","renderMath","replace","text","getElementById","val","p","tsString","toLocaleString","last_answer","current_answer","toggle_answer_button","click","display_timestamp","button_text","last_timestamp","feedbackStr","score","comment","TimedShortAnswer","shortanswer","TimedList","Timed","childNodes","visited","timeLimit","limitedTime","isNaN","parseInt","startingTime","showFeedback","showResults","random","showTimer","fullwidth","nopause","enableScratchAC","running","paused","done","taken","incorrect","correctStr","incorrectStr","skippedStr","skipped","currentQuestionIndex","renderedQuestionArray","getNewChildren","enableDebug","oncontextmenu","checkAssessmentStatus","then","renderTimedAssess","newChildren","sendInfo","course_name","request","Request","method","headers","jsonHeaders","response","fetch","json","tookAssessment","assessmentTaken","clear","Promise","resolve","createRenderedQuestionArray","randomizeRQA","renderContainer","renderTimer","renderControlButtons","timedDiv","renderNavControls","renderSubmitButton","renderFeedbackContainer","styleExamElements","navDiv","flagDiv","switchContainer","classList","add","switchDiv","wrapperDiv","timerContainer","showTime","controlDiv","startBtn","pauseBtn","tabindex","role","finishButton","flagButton","show","mess","renderTimedQuestion","startAssessment","pauseAssessment","tmpLi","tmpA","pagNavList","leftContainer","leftNavButton","rightNavButton","flaggingPlace","flagContainer","rightContainer","ensureButtonSafety","break","qNumList","qNumWrapperList","navBtnListeners","flagBtnListener","state","navigateAway","target","match","hasClass","oldIndex","handleNextPrev","handleNumberedNav","handleFlag","buttonContainer","confirm","finishAssessment","scoreDiv","tmpChild","timedWrapper","initAttempts","temporaryValue","randomIndex","currentIndex","Math","floor","currentQuestion","rqa","newq","initialize","e","componentKind","includes","handlePrevAssessment","restoreAnsweredQuestions","lastTime","now","increment","timeStamp","storageObj","on","preventDefault","returnValue","mins","secs","minsString","secsString","beginning","timeString","minutes","timeTaken","seconds","timeTips","getElementsByClassName","setTimeout","currentTime","email","width","margin","border","padding","color","findTimeTaken","finalizeProblems","checkScore","displayScore","storeScore","logScore","off","assignment_id","ajax","url","app","dataType","is_timed","success","retdata","hideTimedFeedback","substring","storage_arr","time_taken","shouldUseServer","storageDate","tmpArr","reset","parsedData","numQuestions","scoreString","highlightNumberedList","correctCount","incorrectCount","skippedCount","numberedBtns","eq","k"],"sourceRoot":""}